@inherits umbraco.MacroEngines.DynamicNodeContext
@{ 
    
  var level = String.IsNullOrEmpty(Parameter.Level) ? 1 : int.Parse(Parameter.Level); 
  var ulClass = String.IsNullOrEmpty(Parameter.UlClass) ? "" : String.Format(" class=\"{0}\"", Parameter.UlClass); 
  var parent = @Model.AncestorOrSelf(level);
  if (parent != null) {
    <ul@Html.Raw(ulClass)>
    @foreach (var item in parent.Children.Where("Visible")) {
      var selected = Array.IndexOf(Model.Path.Split(','), item.Id.ToString()) >= 0 ? " class=\"selected\"" : "";
      
  if(umbraco.library.IsLoggedOn()){
    if( !@item.Name.Equals("Login")&& !@item.Name.Equals("Register")){ 
      if(@item.Name.Equals("Products")){                                                                
        <li@Html.Raw(selected) id="list">
                                                                                                                              
        <a href="@item.Url">@item.Name</a>
         <ul id="listelements" style="display:none;">
                @foreach(var child in @item.Children){
                 var selectedd= Array.IndexOf(Model.Path.Split(','), child.Id.ToString()) >= 0 ? " class=\"selectedd\"" : "";                   
                   
                  <li@Html.Raw(selectedd)>
                                                                                                                              
                    <a href="@child.Url">@child.Name </a>
                                                                                                                         
                    </li>
                                      
                    } 
             </ul>                                                          
        
                                                                                                                         
        </li>
        } 
           else{
           <li@Html.Raw(selected)>
                                                                                                                              
        <a href="@item.Url">@item.Name</a>
           </li>
           }
   
      }
                                        
      }
   if(!umbraco.library.IsLoggedOn()){
    if( !@item.Name.Equals("Logout")&& !@item.Name.Equals("Edit user")&& !@item.Name.Equals("Other Users")){ 
            if(@item.Name.Equals("Products")){                                                                
        <li@Html.Raw(selected) id="list">
                                                                                                                              
        <a href="@item.Url">@item.Name</a>
         <ul id="listelements" style="display:none;">
                @foreach(var child in @item.Children){
                 var selectedd= Array.IndexOf(Model.Path.Split(','), child.Id.ToString()) >= 0 ? " class=\"selectedd\"" : "";                   
                   
                  <li@Html.Raw(selectedd)>
                                                                                                                              
                    <a href="@child.Url">@child.Name </a>
                                                                                                                         
                    </li>
                                      
                    } 
             </ul>                                                          
        
                                                                                                                         
        </li>
        } 
           else{
           <li@Html.Raw(selected)>
                                                                                                                              
        <a href="@item.Url">@item.Name</a>
           </li>
           }
                                      
        }  
    }                                     
                                                                   
  }
                       
    </ul>
  }
 
  
}

